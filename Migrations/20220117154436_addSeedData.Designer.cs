// <auto-generated />
using System;
using Final_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Final_Project.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220117154436_addSeedData")]
    partial class addSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Final_Project.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varChar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            DOB = new DateTime(1991, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "JK@gmail.com",
                            Name = "JK Rowlings",
                            Phone = 28653212
                        },
                        new
                        {
                            AuthorId = 2,
                            DOB = new DateTime(1985, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "JMD@outlook.com",
                            Name = "J. M. DeMatteis",
                            Phone = 88653212
                        },
                        new
                        {
                            AuthorId = 3,
                            DOB = new DateTime(1963, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "DM@gmail.com",
                            Name = "David Mitchell",
                            Phone = 98653212
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Authorship", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("Authorship");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AuthorId = 1,
                            BookId = 1,
                            Role = 1
                        },
                        new
                        {
                            ID = 2,
                            AuthorId = 2,
                            BookId = 1,
                            Role = 2
                        },
                        new
                        {
                            ID = 3,
                            AuthorId = 3,
                            BookId = 2,
                            Role = 1
                        },
                        new
                        {
                            ID = 4,
                            AuthorId = 3,
                            BookId = 2,
                            Role = 2
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catagory")
                        .HasColumnType("int");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Publsiher")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ReleseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Catagory = 3,
                            Cover = "/images/Harry_Potter_and_the_Philosopher's_Stone.jpg",
                            Name = "Harry Potter",
                            Price = 50.0,
                            Publsiher = "PublisherCo",
                            ReleseDate = new DateTime(1995, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 2,
                            Catagory = 1,
                            Cover = "/images/SpidermanKLH.jpg",
                            Name = "Spiderman: Kravens Last Hunt",
                            Price = 65.989999999999995,
                            Publsiher = "NewPublisherCo",
                            ReleseDate = new DateTime(2002, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 3,
                            Catagory = 2,
                            Cover = "/images/Cloud_atlas.jpg",
                            Name = "Cloud Atlas",
                            Price = 35.0,
                            Publsiher = "ThePublisher",
                            ReleseDate = new DateTime(1951, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Authorship", b =>
                {
                    b.HasOne("Final_Project.Models.Author", "Author")
                        .WithMany("Authorships")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Book", "Book")
                        .WithMany("Authorships")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Final_Project.Models.Author", b =>
                {
                    b.Navigation("Authorships");
                });

            modelBuilder.Entity("Final_Project.Models.Book", b =>
                {
                    b.Navigation("Authorships");
                });
#pragma warning restore 612, 618
        }
    }
}
